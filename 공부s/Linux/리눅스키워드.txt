pwd 	: 현재 위치의 경로
ls 	: 현 위치에 존재하는 파일/디렉토리 보여주세요
	ls -a 	: 숨김파일 포함 표시
	ls -R 	: 하위 디렉터리 싸그리싹싹
	ls -F 	: 파일 종류 표시
cd 	: 디렉터리 이동
	cd ~ 	: 홈디렉터리
	cd 	: 홈디렉터리
mkdir	: 디렉터리 생성
	mkdir -p : 중간 디렉터리 자동생성
rmdir	: 디렉터리 삭제
rm	: 파일 삭제
touch	: 파일 생성 or 수정 시간 변경
cat 	: 파일 내용 출력		(가볍)
	cat -n	: 줄 번호 붙여서 출력
more 	: 다음다음 가능 출력	(중간)
less 	: 다음이전 가능 출력	(무겁)
tail #: 뒷부분 #행만큼 출력
cp ★ ♥ : ★을 ♥로 복사
mv ★ ♥ : ★을 ♥로 이동/변경
ln 	: 하드 링크 생성
ln -s 	: 심볼릭 링크 생성
grep ♥ ★	: ★에서 ♥를 찾아주세요
	grep -n ♥ ★: 행 번호 함께 출력
왕 중요--------------------------------------------------------------
find [경로] [검색조건] [동작]
조건
	-name filename	: 파일명으로 검색
	-type 파일종류	: 파일 종류로 검색
	-user loginID	: 지정한 사용자가 소유한 모든 파일 검색
	-perm 접근권한	: 지정한 권한과 일치하는 파일 검색
동작
	-exec 명령 {} \; 	: 검색된 파일에 명령을 실행
	-ok 명령 {} \; 	: 사용자의 확인을 받아서 명령을 실행
	-print  		: 검색된 파일의 절대 경로 출력
	-ls 			: 검색 결과를 긴 목록 형식으로 출력
			예) find /home/user1 -name comment -exec vi {} \;
왕 중요--------------------------------------------------------------
echo 	: 입력된 문자열 출력
	echo '~~' : '' 안의 내용을 그대로 출력
	echo "~~" : "" 안의 내용을 출력하되, 명령어가 있으면 명령어 적용
특수문자
	*	: 모든~~의미
	?	: 임의의 문자(검색?)자리에 넣어 사용
	[]	: 대괄호 안의 숫자 적용
		[147]은 1, 4, 7 있는거
		[1~4]은 1, 2, 3, 4 있는거
	~	: 홈디렉터리 지칭용
	-	: 이전?
		cd - : 위치 뒤로가기
	|	: ♥ | ★ = ♥ 안에서 ★을 실행해주세요
	;	: 한 줄에 여러 명령어 사용 위한
	''	: 그대~로 출력
	""	: 명령어 들어오면 명령어는 실행하고 문자열 출력
	``	: 문자열 안에서 `~~` = ~~ 내용 명령어로 입력
	\	: 이스케이프 문자
★	>	:
		: ♥ > ★ = ♥ 내용이 ★이름의 파일로 (덮어쓰기)
		: 명령>파일명 = 명령을 파일로 저장
		: 명령 (0,1,2)>파일명 = 명령의 (입력,출력,오류)내용"만"을 파일로 만들어 저장
		>> : (같은 내용 + "이어쓰기")

★★	리디렉션으로의 > : ls . /abc > ls.out 2>&1 = .과 /abc의 ls 출력값을 ls.out에 저장, 오류출력을 표준 출력으로 취급하여 저장

명령 < 파일명 : 파일 내용에 대해 명령 실행

★	>>	: ♥ >> ★ = ♥ 내용이 ★이름의 파일로 (이어쓰기)
set	: 셸 변수와 환경 변수 모두 출력
env	: 환경변수 출력
♥=★	: 셸 변수 ♥에 ★값 저장
export ♥ : 셸 변수 ♥를 환경변수로 변경
unset ★ : 변수 ★을 해제해주세요
alias ♥=★ : ★명령어를 ♥로 바꿔주세요
!!	: 바로 직전 명령 실행
!번호	: 해당 번호의 명령 실행
!문자열: 해당 문자열로 시작하는 마지막 명령 재실행
~/.bashrc : 나만의 설정~(alias 등) = /home/user1/.bashrc
ps	: 현재 실행중인 프로세스 정보 출력
	-f	: 프로세스 ID 출력(자식 - 부모 순)
	-e	: 모든 프로세스 출력
	-ef	: 둘이 짬뽕한거
명령 뒤에 & : 백그라운드로 실행